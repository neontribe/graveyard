<?php

/**
 * @file
 * The main nt2_landing module file.
 */

/**
 * Implements hook_module.
 */
function nt2_landing_module() {

}

/**
 * Implements hook_menu.
 */
function nt2_landing_menu() {
  $items = array();

  $items['nt2_landing'] = array(
    'title' => 'NT2 Landing Page',
    'page callback' => 'nt2_landing_callback',
    'access callback' => TRUE,
    'expanded' => TRUE,
  );

  $items['nt2_landing/nt2_landing_search_node_by_title_callback'] = array(
    'page callback' => 'nt2_landing_search_node_by_title_callback',
    // 'file' => 'nt2_landing.module',.
    'type' => MENU_CALLBACK,
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Page callback for nt2_landing.
 */
function nt2_landing_callback() {

}

/**
 * Implements hook_block_info().
 */
function nt2_landing_block_info() {
  $blocks = array();

  $blocks['nt2_landing'] = array(
    'info' => t('NT2: landing block.'),
    'cache' => DRUPAL_NO_CACHE,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '<front>',
    // Status of 1 means enabled.
    'status' => 1,
  );

  $blocks['nt2_landing_multi'] = array(
    'info' => t('NT2: landing block.'),
    'cache' => DRUPAL_NO_CACHE,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_LISTED,
    'pages' => '<front>',
    // Status of 1 means enabled.
    'status' => 1,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nt2_landing_block_view($delta) {
  $block = array();

  // TODO: Make this configurable.
  $temp_node_list = NT2Landing::loadLandingNodes(variable_get("COTTAGE_LANDING_PAGE_MACHINE_NAME"));

  if ($delta === 'nt2_landing') {

    // TODO: Make this configurable also.
    if (!empty($temp_node_list['node'])) {

      $node_ids = array_keys($temp_node_list['node']);
      $first_id = array_shift($node_ids);

      $temp_node = node_load($first_id);

      $temp_view = node_view($temp_node, 'teaser');

      $block['subject'] = t('Landing Pages');
      $block['content'] = $temp_view;
    }

  }
  elseif ($delta === 'nt2_landing_multi') {

  }

  return $block;
}

/**
 * Callback for landing page node search by title, returns JSON.
 */
function nt2_landing_search_node_by_title_callback($string = "") {
  $matches = array();

  if ($string) {
    $query = new EntityFieldQuery();
    $entities = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', variable_get("COTTAGE_LANDING_PAGE_MACHINE_NAME"))
      ->fieldCondition('landing_title', 'value', db_like($string) . '%', 'LIKE')
      ->execute();

    $loaded_nodes = node_load_multiple(array_keys($entities['node']));

    foreach ($loaded_nodes as $node) {
      // var_dump($node);
      $landing_title = $node->landing_title['und'][0]['value'];

      $matches[$landing_title . " [$node->nid]"] = check_plain($landing_title);
    }
  }

  drupal_json_output($matches);
}

/**
 * Implements hook_block_configure.
 */
function nt2_landing_block_configure($delta) {
  $form = array();
  if ($delta == 'nt2_landing') {

    $form['node_landing_single_selection'] = array(
      '#type' => 'textfield',
      '#title' => t('Choose a landing page.'),
    // The autocomplete path is provided in hook_menu in ajax_example.module.
      '#autocomplete_path' => 'nt2_landing/nt2_landing_search_node_by_title_callback',
    );

  }
  return $form;

}

/**
 * Implements hook_block_save.
 */
function nt2_landing_block_save($delta = '', $edit = array()) {
  if ($delta == 'nt2_landing') {
    variable_set('node_landing_teasers_count', $edit['node_landing_teasers_count']);
  }
}

/**
 * Implements hook_theme().
 */
function nt2_landing_theme() {
  $theme = array();

  $theme['nt2_landing_block_theme'] = array();

  return $theme;
}
