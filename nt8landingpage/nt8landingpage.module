<?php

/**
 * @file
 * Contains nt8landingpage.module.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function nt8landingpage_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the nt8landingpage module.
    case 'help.page.nt8landingpage':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Defines the landing page content type and its&#039; functionality.') . '</p>';
      return $output;

    default:
  }
}

function nt8landingpage_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  $property_service = \Drupal::getContainer()->get('nt8property.property_methods');
  $search_service   = \Drupal::getContainer()->get('nt8search.methods');

  $entity_type = $entity->getType();

  if($view_mode === 'full') {
    switch ($entity_type) {
      case 'landing_page':
      {
        $filter_string = $property_service->getNodeFieldValue($entity, 'field_tabs_filter_string', 0, 'value');
        $filter_array = [];
        parse_str($filter_string, $filter_array);

        $loadedResultsAsNodes = [];
        $search_results = $search_service->performSearchFromParams($filter_array, $loadedResultsAsNodes);

        $searchResultsBlock = \Drupal::service('plugin.manager.block')->createInstance(
          'nt8search_results_block',
          [
            'properties' => $loadedResultsAsNodes,
            'search_results' => $search_results
          ]
        );

        $build['filter_results'] = $searchResultsBlock->build();
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function nt8landingpage_theme() {
  return [
    'nt8landingpage' => [
      'template' => 'nt8landingpage',
      'render element' => 'children',
    ],
  ];
}
