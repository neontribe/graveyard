<?php

/**
 * @file
 * NT2 Entity Module File
 */
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);

class nt2EntityEntityController extends EntityAPIController {

	//Override buildContent
	public function buildContent($entity, $view_mode = 'full', $langcode = NULL, $content = array()) {
		//Invoke parent and grab return so we can modify for output.
		$build = parent::buildContent($entity, $view_mode, $langcode, $content);

		$build['reference'] = array(
			'#type' => 'markup',
			'#markup' => check_plain($entity->reference),
			'#prefix' => '<div class="cottage-reference"><p>Reference:',
			'#suffix' => '</p></div>',
		);
		$build['brandcode'] = array(
			'#type' => 'markup',
			'#markup' => check_plain($entity->brandcode),
			'#prefix' => '<div class="cottage-brandcode"><p>Cottage Code: ',
			'#suffix' => '</p></div>',
		);
		$build['name'] = array(
			'#type' => 'markup',
			'#markup' => check_plain($entity->name),
			'#prefix' => '<div class="cottage-name"><p>Name: ',
			'#suffix' => '</p></div>',
		);

		return $build;
	}
}


function nt2_entity_entity_info() {
	$info = array();

	$info['cottage'] = array(
		'label' => t('Cottage Entity'),
		'base table' => 'cottages',
		'entity keys' => array(
			'id' => 'id',
			'label' => 'name'
		),
		'module' => 'nt2_entity',
		'entity class' => 'Entity',
		'controller class' => 'nt2EntityEntityController',
	);

	return $info;
};

function nt2_entity_menu() {
  $items = array();

  $items['nt2_test'] = array(
		'title' => 'nt2_test',
		'page callback' => 'nt2_entity_test_view',
		'access arguments' => array('access content'),
		'type' => MENU_NORMAL_ITEM
	);

  $items['admin/config/nt2_entity'] = array(
    'title' => 'NT2 Entity',
    'position' => 'right',
    'weight' => -25,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access administration pages'),
  );

  $items['admin/config/nt2_entity/entity'] = array(
    'title' => 'NT2 Entity',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nt2_entity_admin_form'),
    'access arguments' => array('access administration pages'),
    'file' => 'nt2_entity.admin.inc',
  );

  return $items;
}

/**
 * Create a taxonomy term and return the tid.
 */
function create_taxonomy_term($name, $vid) {
	$term = new stdClass();
	$term->name = $name;
	$term->vid = $vid;
	taxonomy_term_save($term);
	return $term->tid;
}

function create_vocabulary_from_attrib_list($attribs) {
	foreach ($attribs as $attrib) {
		dpm($attrib);
		create_taxonomy_term($attrib["label"], variable_get('nt2_entity_vocab_id'));
	}
}

function nt2_entity_test_view() {
	$items = array();

	//Test that the api works
	// $path = sprintf('property/' . strtoupper("A241") . '_ZZ');
	// $data = NeontabsIO::getInstance()->get($path);
	// dpm($data);


	$data = NeontabsIO::getInstance()->get("/");

	dpm($data["constants"]["attributes"]);

	create_vocabulary_from_attrib_list($data["constants"]["attributes"]);

	//Load the first cottage in the database (added manually)
	$cottages = entity_load('cottage', array(1, 2, 3));
	$list = entity_view('cottage', $cottages);

	foreach ($list['cottage'] as $cottage) {
		$items[] = drupal_render($cottage);
	}


	// if(!isset($cottages[1000])) {
	// 	$entity = entity_create('cottage', array('id' => 1000));
	// 	$entity->reference = t('6969');
	// 	$entity->brandcode = t('6969');
	// 	$entity->name = t('Spring House');
	// 	$entity->save();
	// }

	return implode($items);
}