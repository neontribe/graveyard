<?php

/*
* Implement hook_install.
*/
function nt2_node_type_install() {
	#Setup constants
	variable_set("COTTAGE_NODE_TYPE_MACHINE_NAME", "cottage_entity");
	variable_set("COTTAGE_VOCAB_MACHINE_NAME", "cottage_vocab");

	#Define the cottage entity fields.
	$cottage_fields = array(
		'cottage_reference' => array(
			'field_name' => 'cottage_reference',
			'type' => 'text',
		),
		'cottage_brandcode' => array(
			'field_name' => 'cottage_brandcode',
			'type' => 'text',
		),
		'cottage_url' => array(
			'field_name' => 'cottage_url',
			'type' => 'text',
		),
		'cottage_slug' => array(
			'field_name' => 'cottage_slug',
			'type' => 'text',
		),
		'cottage_name' => array(
			'field_name' => 'cottage_name',
			'type' => 'text',
		),
		'cottage_accomodates' => array(
			'field_name' => 'cottage_accomodates',
			'type' => 'number_integer',
		),
		'cottage_accommodationdescription' => array(
			'field_name' => 'cottage_accommodationdescription',
			'type' => 'text',
		),
		'cottage_bedrooms' => array(
			'field_name' => 'cottage_bedrooms',
			'type' => 'number_integer',
		),
		'cottage_changeoverday' => array(
			'field_name' => 'cottage_changeoverday',
			'type' => 'text',
		),
		'cottage_rating' => array(
			'field_name' => 'cottage_rating',
			'type' => 'number_integer',
		),
		'cottage_pets' => array(
			'field_name' => 'cottage_pets',
			'type' => 'number_integer',
		),
		'cottage_promote' => array(
			'field_name' => 'cottage_promote',
			'type' => 'number_integer',
		),
		'cottage_booking' => array(
			'field_name' => 'cottage_booking',
			'type' => 'text'
 		),
 		'cottage_ownercode' => array( 
 			'field_name' => 'cottage_ownercode',
 			'type' => 'text',
 		),
 		'cottage_images' => array(
 			'field_name' => 'cottage_images',
 			'type' => 'text',
 			'cardinality' => -1,
		),
		'cottage_term_reference' => array(
			'field_name' => 'cottage_term_reference',
			'type' => 'taxonomy_term_reference',
			'cardinality' => FIELD_CARDINALITY_UNLIMITED,
			'settings' => array(
				'allowed_values' => array(
					array(	
						'vocabulary' => variable_get("COTTAGE_VOCAB_MACHINE_NAME"),
						'parent' => 0,
					),
				),
			),
		),
		'cottage_fieldaddress' => array(	
			'active' => 1,
		    'cardinality' => 1,
		    'deleted' => 0,
		    'entity_types' => array(),
		    'field_name' => 'cottage_fieldaddress',
		    'indexes' => array(),
		    'locked' => 0,
		    'module' => 'addressfield',
		    'settings' => array(),
		    'translatable' => 0,
		    'type' => 'addressfield',
		),
		'cottage_coordinates' => array(
			'field_name' => 'cottage_coordinates',
			'type' => 'number_float',
			'cardinality' => 2,
			'precision' => 10.0,
		),
	);

	$vocab_fields = array(	
		'tag_code' => array(
			'field_name' => 'tag_code',
			'type' => 'text',
		),
		'tag_brand' => array(
			'field_name' => 'tag_brand',
			'type' => 'text',
		),
	);

	$custom_instances = array(
		'cottage_fieldaddress' => array(
			'bundle' => 'cottage_entity',
		    'default_value' => NULL,
		    'deleted' => 0,
		    'description' => '',
		    'display' => array(
		      'default' => array(
		        'label' => 'above',
		        'module' => 'addressfield',
		        'settings' => array(
		          'format_handlers' => array(
		            0 => 'address',
		          ),
		          'use_widget_handlers' => 1,
		        ),
		        'type' => 'addressfield_default',
		        'weight' => 17,
		      ),
		      'teaser' => array(
		        'label' => 'above',
		        'settings' => array(),
		        'type' => 'hidden',
		        'weight' => 0,
		      ),
		    ),
		    'entity_type' => 'node',
		    'field_name' => 'cottage_fieldaddress',
		    'label' => 'cottage_fieldaddress',
		    'required' => 0,
		    'settings' => array(
		      'user_register_form' => FALSE,
		    ),
		    'widget' => array(
		      'active' => 1,
		      'module' => 'addressfield',
		      'settings' => array(
		        'available_countries' => array(),
		        'default_country' => 'site_default',
		        'format_handlers' => array(
		          'address' => 'address',
		          'address-hide-postal-code' => 0,
		          'address-hide-street' => 0,
		          'address-hide-country' => 0,
		          'organisation' => 0,
		          'name-full' => 0,
		          'name-oneline' => 0,
		          'address-optional' => 0,
		        ),
		      ),
		      'type' => 'addressfield_standard',
		      'weight' => 13,
		    ),
		)
	);

	#Register the node type with Drupal.
	$cottage_type_creation_status = CottageNodeManager::registerCottageNodeTypeEntity(variable_get("COTTAGE_NODE_TYPE_MACHINE_NAME"));

	if($cottage_type_creation_status == FALSE) {
		// throw new Exception("Cottage type already exists.");
		//drupal_set_message(t('Unable to create the new content_type of: `cottage_entity`.'), 'error');
		var_dump($cottage_type_creation_status);
	}

	#Register the requisite fields.
	$cottage_field_creation_status = CottageNodeManager::registerCottageFieldDefinitionInstances(variable_get("COTTAGE_NODE_TYPE_MACHINE_NAME"), $cottage_fields, $custom_instances);

	#Create the cottage tag vocabulary.
	$cottage_vocab_tag_creation_status = CottageVocabManager::createCottageTagVocabulary(variable_get("COTTAGE_VOCAB_MACHINE_NAME"), $vocab_fields);

	#Populate the vocabulary from the API
	CottageVocabManager::setup_vocabulary_from_api(variable_get("COTTAGE_VOCAB_MACHINE_NAME"), "/");

}

function nt2_node_type_disable() {
	#Delete global variables.
	variable_del("COTTAGE_NODE_TYPE_MACHINE_NAME");
	variable_del("COTTAGE_VOCAB_MACHINE_NAME");
	#Delete the node_type: `COTTAGE_NODE_TYPE_MACHINE_NAME` if it currently exists in the DB.
	if(CottageNodeManager::nodeTypeExists(variable_get("COTTAGE_NODE_TYPE_MACHINE_NAME"))) {
		#Delete the node_type
		node_type_delete(variable_get("COTTAGE_NODE_TYPE_MACHINE_NAME"));
	}

	$vocab = CottageVocabManager::vocabTypeExists(variable_get("COTTAGE_VOCAB_MACHINE_NAME"));
	if($vocab) {
		#Delete each individual term.
		foreach (taxonomy_get_tree($vocab->vid) as $term) {
  			taxonomy_term_delete($term->tid);
		}

		#Delete the vocabulary
		taxonomy_vocabulary_delete(variable_get("COTTAGE_VOCAB_MACHINE_NAME"));		
	}
}